@using Ztop.Todo.ActiveDirectory;
@model Ztop.Todo.Model.Evection
    @{ 
        bool flag = ViewBag.Detail??false;
        var costtypes = (Model.TCosts ?? new List<Traffic>()).ToDictionary(e => e.Type, e => e);
        List<UserGroup> groups = ViewBag.Groups;
        List<User> allUsers = ViewBag.Users;
    }


<h3 style="margin-top:10px;">出差详情</h3>
<div>
    <table class="table table-bordered" style="margin:0px;">
        <tr>
            <th class="col-md-2 col-xs-2">出差地点</th>
            <td class="col-md-4 col-xs-4">
                <input type="text" class="form-control" name="Place" value="@(Model.Place)" placeholder="出差地点" />
            </td>
            <th class="col-md-2 col-xs-2">出差人员</th>
            <td class="col-md-4 col-xs-4">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="出差人员" readonly="readonly" name="Persons" value="" />
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#Users"><i class="glyphicon glyphicon-zoom-in"></i>人员选择</button>
                    </span>
                </div>
                <div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" id="Users">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 class="modal-title">出差人员选择</h4>
                            </div>
                            <div class="modal-body" style="padding:10px;">
                                @foreach (var group in groups.OrderByDescending(e => e.Order))
                                {
                                    <table class="table" style="margin:0px;">
                                        <tr>
                                            <th>@(group.Name)</th>
                                        </tr>
                                        @{ 
                                            var table = allUsers.Where(e => e.GroupID == group.ID).OrderByDescending(e => e.Order).ToList().ListToTable(5);
                                            foreach(var item in table)
                                            {
                                                <tr>
                                                    @foreach(var entry in item)
                                                    {
                                                        if (entry != null)
                                                        {
                                                            <td>
                                                                <label class="checkbox-inline">
                                                                    <input type="checkbox" value="@(entry.DisplayName)" name="Person" />@(entry.DisplayName)
                                                                </label>
                                                            </td>
                                                        }
                                                    }
                                                </tr>
                                            }
                                        }
                                    </table>
                                }
                               
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal"><i class="glyphicon glyphicon-remove-sign"></i>取消</button>
                                <button type="button" class="btn btn-primary" name="Person-OK" data-dismiss="modal"><i class="glyphicon glyphicon-ok-sign"></i>确定</button>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <th>交通费用</th>
            <td>
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="交通费用" readonly="readonly" name="Traffic" value="" />
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#Traffic"><i class="glyphicon glyphicon-zoom-in"></i>费用详情</button>
                    </span>
                </div>
                <div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" id="Traffic">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 class="modal-title">交通费用详情</h4>
                            </div>
                            <div class="modal-body container-fluid">
                                <div class="form-group">
                                    <label class="control-label col-md-2 col-xs-2">交通：</label>
                                    <div class="col-md-8 col-xs-8">
                                        <select name="Way" class="form-control">
                                            <option value="">请选择</option>
                                            <option value="公共交通">公共交通</option>
                                            <option value="自驾车">自驾车</option>
                                        </select>
                                    </div>
                                </div>
                                <hr />
                                <div id="ViewTraffic">
                                 
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal"><i class="glyphicon glyphicon-remove-sign"></i>取消</button>
                                <button type="button" class="btn btn-primary" name="Traffic-OK" data-dismiss="modal"><i class="glyphicon glyphicon-ok-sign"></i>确定</button>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
            <th>出差补贴</th>
            <td>
                <duv class="input-group">
                    <input type="text" class="form-control" placeholder="出差补贴" readonly="readonly" name="" value="" />
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#SubSide"><i class="glyphicon glyphicon-zoom-in"></i>补贴详情</button>
                    </span>
                </duv>
                <div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" id="SubSide">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 class="modal-title">补贴详情</h4>
                            </div>
                            <div class="modal-body">
                                <div class="form-group">
                                    <label class="control-label col-md-2 col-xs-2">人员：</label>
                                    <div class="col-md-7 col-xs-7" id="ViewSubSide">

                                    </div>
                                    <div class="col-md-3 col-xs-3">
                                        <button type="button" class="btn btn-success btn-sm" name="Keyin"><i class="glyphicon glyphicon-plus"></i>录入时间</button>
                                    </div>
                                </div>
                                <div class="form-group">
                                    
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal"><i class="glyphicon glyphicon-remove-sign"></i>取消</button>
                                <button type="button" class="btn btn-primary" name="SubSide-OK" data-dismiss="modal"><i class="glyphicon glyphicon-ok-sign"></i>确定</button>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <th>其他内容</th>
            <td>
                <input type="text" class="form-control" name=""  placeholder=""/>
            </td>
            <th>其他金额</th>
            <td>
                <div class="input-group">
                    <input type="text" class="form-control" name="" placeholder="" />
                    <span class="input-group-addon">元</span>
                </div>
            </td>
        </tr>
    </table>
</div>

<div style="display:none">
    <div id="BUSBUS">
        @foreach (BusType type in Enum.GetValues(typeof(BusType)))
        {
            if (type == BusType.Company)
            {
                break;
            }
            <div class="col-md-6 col-xs-6 alert alert-warning" style="padding:10px;margin-bottom:5px;margin-top:5px;">
                <div class="input-group">
                    <span class="input-group-addon">
                        <input type="checkbox" name="BusType" value="@(type)" />@(type.GetDescription())
                    </span>
                    <input type="text" class="form-control" name="Cost@(type)" placeholder="金额" />
                    <span class="input-group-addon">元</span>
                </div>
            </div>
        }
    </div>
    <div id="CarCar">
        @foreach (BusType type in Enum.GetValues(typeof(BusType)))
        {
            if (((int)type) > 6)
            {
                <div class="col-md-12 col-xs-12 alert alert-warning" style="padding:10px;margin-top:5px;margin-bottom:5px;">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <input type="checkbox" name="BusType" value="@(type)" />@(type.GetDescription())
                        </span>
                        <input type="text" class="form-control" name="Cost@(type)" placeholder="金额" readonly="readonly" />
                        <span class="input-group-addon">元</span>
                    </div>
                    <div class="input-group" style="margin-top:10px;">
                        <span class="input-group-addon">公里数：</span>
                        <input type="text" class="form-control" name="KiloMeters" placeholder="公里数" targetType="@(type)" />
                        <span class="input-group-addon">公里</span>
                        <span class="input-group-addon">车牌：</span>
                        @if (type == BusType.Company)
                        {
                            <select name="Plate" class="form-control">
                                <option value="">请选择车牌</option>
                                <option value="浙AZN022">浙AZN022</option>
                                <option value="浙A4RS85">浙A4RS85</option>
                            </select>
                        }
                        else
                        {
                            <input type="text" class="form-control" name="Plate" placeholder="车牌" />
                        }
                    </div>
                    @if (type == BusType.Company)
                    {
                        <div class="input-group" style="margin-top:10px;">
                            <span class="input-group-addon">过路费:</span>
                            <input type="text" class="form-control" name="Toll" placeholder="过路费" targetType="Company" />
                            <span class="input-group-addon">元</span>
                            <span class="input-group-addon">油费：</span>
                            <input type="text" class="form-control" name="Petrol" placeholder="油费" />
                            <span class="input-group-addon">元</span>
                        </div>
                        <div class="input-group" style="margin-top:10px;">
                            <span class="input-group-addon">司机：</span>
                            <select name="Driver" class="form-control">
                                @foreach (Driver driver in Enum.GetValues(typeof(Driver)))
                                {
                                    <option value="@(driver)">@(driver)</option>
                                }
                            </select>
                            <span class="input-group-addon">车补：</span>
                            <input type="text" name="CarPetty" placeholder="车补" class="form-control" readonly="readonly" />
                            <span class="input-group-addon">元</span>
                        </div>
                       
                    }
                    else
                    {
                        <div class="input-group" style="margin-top:10px;">
                            <span class="input-group-addon">过路费：</span>
                            <input type="text" class="form-control" name="Toll" placeholder="过路费" targetType="Personal" />
                            <span class="input-group-addon">元</span>
                        </div>
                    }
                </div>
            }
        } 
    </div>
</div>

<script>
    var BUSHtml = $("#BUSBUS").html();
    var CarHtml = $("#CarCar").html();
    $(function () {
        var mans = [];
        $("button[name='Person-OK']").click(function () {
            mans.splice(0, mans.length);
            $("input[name='Person']:checked").each(function () {
                mans.push($(this).val());
            });
            $("input[name='Persons']").val(mans.join(";"));
            //选择出差人员之后，自动在补贴详情中的人员自动添加
            $("#ViewSubSide").empty();
            $.each(mans, function (i, value) {
                var appendhtml = "<label class='checkbok-inline'><input type='checkbox' name='mans' value='" + value + "' />"+value+"</label>";
                $("#ViewSubSide").append(appendhtml);
            });

            $("#ViewSubSide input[name='mans']").unbind("")
        });

        $("select[name='Way']").change(function () {
            $("#ViewTraffic").empty();
            var val = $(this).val();
            if (val == "公共交通") {
                $("#ViewTraffic").append(BUSHtml);
            } else if (val == "自驾车") {
                $("#ViewTraffic").append(CarHtml);
                //公司车栏中选择司机的时候，自动计算车补
                $("select[name='Driver']").unbind("change").bind("change", function () {
                    var money = .0;
                    var kilo = parseFloat($("#ViewTraffic input[name='KiloMeters']")[0].value);
                    if (kilo != NaN && kilo != undefined) {
                        var driver = $(this).val();
                        if (driver == "无") {
                            money = 0;
                        } else if (driver == "孙海杰") {
                            money = kilo * 0.5;
                        } else {
                            money = kilo * 0.2;
                        }
                        $("#ViewTraffic input[name='CarPetty']").val(money);
                        StatisticCompany();
                    } else {
                        alert("未获取公里数，无法计算车补金额！");
                    }
                });

                //绑定公司车以及自备车栏中填写油费之后，自动计算合计金额
                $("input[name='Petrol']").unbind("change").bind("change", function () {
                    StatisticCompany();
                });
                //绑定公司车以及自备车栏中填写过路费之后，自动计算合计金额
                $("input[name='Toll']").unbind("change").bind("change", function () {
                    var type = $(this).attr("targetType");
                    if (type == "Company") {
                        StatisticCompany();
                    } else if (type = "Personal") {
                        StatisticPersonal();
                    }
                });
                //绑定公司车以及自备车栏中填写公里数之后，自动计算合计金额
                $("input[name='KiloMeters']").unbind("change").bind("change", function () {
                    var type = $(this).attr("targetType");
                    if (type == "Company") {
                        StatisticCompany();
                    } else if (type == "Personal") {
                        StatisticPersonal();
                    }
                });

            }
            StatisticTraffic();
        });

        //自动统计公司车的金额
        function StatisticCompany() {
            var sum = 0;
            var carPetty = parseFloat($("#ViewTraffic input[name='CarPetty']").val());
            if (!isNaN(carPetty)) {
                sum += carPetty;
            }
            var petrol = parseFloat($("#ViewTraffic input[name='Petrol']").val());
            if (!isNaN(petrol)) {
                sum += petrol;
            }
            var toll = parseFloat($("#ViewTraffic input[name='Toll']")[0].value);
            if (!isNaN(toll)) {
                sum += toll;
            }
            $("#ViewTraffic input[name='CostCompany']").val(sum);
        }

        //自动统计自备车的金额
        function StatisticPersonal() {
            var sum = 0;
            var kile = parseFloat($("#ViewTraffic input[name='KiloMeters']")[1].value);
            if (!isNaN(kile)) {
                $("#ViewTraffic input[name='CostPersonal']").val(kile * 1.5);
            }
        }

        //交通费用中点击确定，自动计算交通费用
        function StatisticTraffic() {
            var sum = 0;
            $("#ViewTraffic input[name='BusType']:checked").each(function () {
                var type = $(this).val();
                var cost = parseFloat($("#ViewTraffic input[name='Cost" + type + "']").val());
                if (!isNaN(cost)) {
                    sum += cost;
                }
            });

            $("input[name='Traffic']").val(sum);
        }

        //当点击交通费用详情中确定的时候，自动计算交通费用
        $("button[name='Traffic-OK']").click(function () {
            StatisticTraffic();
        });

        $("#SubSide").on("show.bs.modal", function (e) {
            if (mans.length > 0) {
                return true;
            } else {
                alert("请选择出差人员再录入出差补贴详情！");
                return false;
            }
        });

        $("button[name='Keyin']").click(function () {
            $("#ViewSubSide input[name='mans']:checked").each(function () {
                var value = $(this).val();
            });
        });






























        $(".datetimepicker").datetimepicker({
            timepicker: false,
            format: 'Y-m-d',
        }).blur(function () {
            var targetId = $(this).attr("targetId");
            var start = $("[name='StartTime"+targetId+"']").val();
            var end = $("[name='EndTime"+targetId+"']").val();
            if (start == NaN || start == ""||start==undefined||start=="undefined" || end == NaN || end == ""||end==undefined||end=="undefined") {
                return false;
            }
            var d1 = new Date(start);
            var d2 = new Date(end);
            if (d2 < d1) {
                alert("截止日期小于起始日期");
                $("[name='Days"+targetId+"']").val(0);
                return false;
            }
            var day_d1 = d1.getTime() / 1000 / 3600 / 24;
            var day_d2 = d2.getTime() / 1000 / 3600 / 24;
            $("[name='Days"+targetId+"']").val(day_d2 - day_d1+1);
        });
        //统计出差补贴
        function SumSubSidy() {
            var sum = 0;
            for (var i = 0; i < 3; i++) {
                var peoples = $("[name='Peoples" + i + "']").val();
                var days = $("[name='Days" + i + "']").val();
                if (peoples == NaN || peoples == "" || peoples == undefined || peoples == "undefined" || days == NaN || days == "" || days == undefined || days == "undefined") {
                    continue;
                }
                sum += parseInt(peoples) * parseInt(days);
            }
            $("[name='SubSidy']").val(sum * 40);
            SumErrand();
        }
        //点击出差补贴输入框  统计出差补贴
        $("input[name='SubSidy']").focus(function () {
            SumSubSidy();
        });
        $("#View").click(function () {//统计出差补贴并隐藏窗口
            SumSubSidy();
            $(".ViewSubSidy").modal("hide");
        })
        //出差详情中选择用户弹出按钮点击事件
        $("[name='BS']").click(function () {
            var buiness = "";
            var count = 0;
            var id = $(this).attr("targetId");
            $("[name='Businesser" + id + "']:checked").each(function () {
                buiness += $(this).val() + ";";
                count = count + 1;
            });
            $("[name='Users" + id + "']").val(buiness);
            $("[name='Peoples" + id + "']").val(count);
            $(".choose" + id + "").modal("hide");
        });
        //统计交通总费用并赋值
        function SumTraffic() {
            var sum = 0;
            $("[name='BusType']:checked").each(function () {
                var type = $(this).val();
                if (type != "Didi") {
                    var val = $("[name='Cost" + type + "']").val();
                    if (val != undefined && val != "undefined" && val != NaN && val != "") {
                        sum += parseFloat(val);
                    }
                }
            });
            $("input[name='Traffic']").val(sum);
            SumErrand();
        }
        $("button[name='BT']").click(function () {
            SumTraffic();
            $(".ViewTraffic").modal("hide");
        });
        $("input[name='Traffic']").click(function () {//统计交通费用
            SumTraffic();
        });
        //输入出差住宿  自动统计金额
        $("input[name='Hotel']").change(function () {
            SumErrand();
        });
        //输入其他金额 自动统计金额
        $("input[name='Other']").change(function () {
            SumErrand();
        });
        //解决当出差人详情点击之后出现黑色块的问题
        $(".ViewSubSidy").on("hidden.bs.modal", function (e) {
            $(".modal-backdrop.fade.in").remove();
        })
        //获取公里数
        function GetKile() {
            var val = .0;
            var kile = $("input[name='KiloMeters']").val();
            if (kile != undefined && kile != NaN && kile != "undefined" && kile != "NaN") {
                val = parseFloat(kile);
            }
            return val;
        }

        //在公司派车中选择司机 自动计算车补
        $("select[name='Driver']").change(function () {
            var val = $(this).val();
            var money = .0;
            var kile = GetKile();
            if (isNaN(kile)) {
                alert("未获取公里数！");
                return;
            }
            if (val == "无") {
                money = 0;
            } else if (val == "孙海杰") {
                money = kile * 0.5;
            } else {
                money = kile * 0.2;
            }
            $("input[name='CarPetty']").val(money);
            StatisticCompany();
        });
        //修改公司车过路费栏  自动统计计算金额
        $("input[name='Toll']").change(function () {
            var targetType = $(this).attr("targetType");
            if (targetType == "Company") {
                StatisticCompany();
            }
        });

        $("input[name='Petrol']").change(StatisticCompany);


        //用户点击公司车和自备车  自动计算金额
        $("input[name='BusType']").click(function () {
            var bustype = $(this).val();
            if (bustype == "Company") {
                var kile = GetKile();
                if (isNaN(kile)) {
                    alert("无法获取公里数！");
                    return;
                }
                StatisticCompany();
            } else if (bustype == "Personal") {
                StatisticPersonal();
            }
        });

      

    })
</script>
